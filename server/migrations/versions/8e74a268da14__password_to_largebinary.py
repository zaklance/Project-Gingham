"""_password to LargeBinary

Revision ID: 8e74a268da14
Revises: 8f0311f02273
Create Date: 2025-03-25 13:42:33.337103

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8e74a268da14'
down_revision = '8f0311f02273'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('admin_users', schema=None) as batch_op:
        batch_op.alter_column('_password',
               existing_type=sa.VARCHAR(),
               type_=sa.LargeBinary(),
               existing_nullable=False,
               postgresql_using='_password::bytea')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('_password',
               existing_type=sa.VARCHAR(),
               type_=sa.LargeBinary(),
               existing_nullable=False,
               postgresql_using='_password::bytea')

    with op.batch_alter_table('vendor_users', schema=None) as batch_op:
        batch_op.alter_column('_password',
               existing_type=sa.VARCHAR(),
               type_=sa.LargeBinary(),
               existing_nullable=False,
               postgresql_using='_password::bytea')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vendor_users', schema=None) as batch_op:
        batch_op.alter_column('_password',
               existing_type=sa.LargeBinary(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               postgresql_using='_password::text')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('_password',
               existing_type=sa.LargeBinary(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               postgresql_using='_password::text')

    with op.batch_alter_table('admin_users', schema=None) as batch_op:
        batch_op.alter_column('_password',
               existing_type=sa.LargeBinary(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               postgresql_using='_password::text')

    # ### end Alembic commands ###
