"""reinitialize

Revision ID: adcca79f5a3a
Revises: 
Create Date: 2024-11-13 14:51:07.525896

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'adcca79f5a3a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('_password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_admin_users')),
    sa.UniqueConstraint('email', name=op.f('uq_admin_users_email'))
    )
    op.create_table('markets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('zipcode', sa.String(), nullable=True),
    sa.Column('coordinates', sa.JSON(), nullable=False),
    sa.Column('schedule', sa.String(), nullable=True),
    sa.Column('year_round', sa.Boolean(), nullable=True),
    sa.Column('season_start', sa.Date(), nullable=True),
    sa.Column('season_end', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_markets'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('_password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('address_1', sa.String(), nullable=False),
    sa.Column('address_2', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('zip', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('vendors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('product', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vendors'))
    )
    op.create_table('market_days',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('hour_start', sa.Time(), nullable=True),
    sa.Column('hour_end', sa.Time(), nullable=True),
    sa.Column('day_of_week', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['markets.id'], name=op.f('fk_market_days_market_id_markets')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_market_days'))
    )
    op.create_table('market_favorites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['market_id'], ['markets.id'], name=op.f('fk_market_favorites_market_id_markets')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_market_favorites_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_market_favorites'))
    )
    op.create_table('market_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review_text', sa.String(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_reported', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['markets.id'], name=op.f('fk_market_reviews_market_id_markets')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_market_reviews_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_market_reviews'))
    )
    op.create_table('vendor_favorites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_vendor_favorites_user_id_users')),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], name=op.f('fk_vendor_favorites_vendor_id_vendors')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vendor_favorites'))
    )
    op.create_table('vendor_reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review_text', sa.String(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_reported', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_vendor_reviews_user_id_users')),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], name=op.f('fk_vendor_reviews_vendor_id_vendors')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vendor_reviews'))
    )
    op.create_table('vendor_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('_password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], name=op.f('fk_vendor_users_vendor_id_vendors')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vendor_users')),
    sa.UniqueConstraint('email', name=op.f('uq_vendor_users_email'))
    )
    op.create_table('baskets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('market_day_id', sa.Integer(), nullable=True),
    sa.Column('sale_date', sa.Date(), nullable=False),
    sa.Column('pickup_time', sa.Time(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_sold', sa.Boolean(), nullable=True),
    sa.Column('is_grabbed', sa.Boolean(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('pickup_duration', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['market_day_id'], ['market_days.id'], name=op.f('fk_baskets_market_day_id_market_days')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_baskets_user_id_users')),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], name=op.f('fk_baskets_vendor_id_vendors')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_baskets'))
    )
    op.create_table('vendor_markets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('market_day_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['market_day_id'], ['market_days.id'], name=op.f('fk_vendor_markets_market_day_id_market_days')),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], name=op.f('fk_vendor_markets_vendor_id_vendors')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vendor_markets'))
    )
    op.create_table('vendor_vendor_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('vendor_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], name=op.f('fk_vendor_vendor_users_vendor_id_vendors')),
    sa.ForeignKeyConstraint(['vendor_user_id'], ['vendor_users.id'], name=op.f('fk_vendor_vendor_users_vendor_user_id_vendor_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vendor_vendor_users'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vendor_vendor_users')
    op.drop_table('vendor_markets')
    op.drop_table('baskets')
    op.drop_table('vendor_users')
    op.drop_table('vendor_reviews')
    op.drop_table('vendor_favorites')
    op.drop_table('market_reviews')
    op.drop_table('market_favorites')
    op.drop_table('market_days')
    op.drop_table('vendors')
    op.drop_table('users')
    op.drop_table('markets')
    op.drop_table('admin_users')
    # ### end Alembic commands ###
